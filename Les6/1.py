# Наталья. не увидел второго скрипта для оптимизации времени плюс по памяти не увидел оптимизации 
# Из ваших заданий в уроках 1-5 найти 2-3 скрипта, сделать замеры времени, оптимизировать, вновь выполнить замеры и ОПИСАТЬ СЛОВАМИ, что вы сделали и чего удалось добиться

from timeit import timeit
def my_func(a, b, c):
    return a + b + c - min(a, b, c)

def my_func1(a, b, c):
    sorted_list = sorted([a, b, c])
    return sorted_list[1] + sorted_list[2]


print(timeit('my_func(2, 3, 5)', setup='from __main__ import my_func'))
print(timeit('my_func1(2, 3, 5)', setup='from __main__ import my_func1'))

"""
Для сравнения решила воспользоваться методом, который использует функцию sorted() для поиска наибольшего элемента. 
Функция sorted() сортирует список в порядке возрастания и выводит наибольшее число.
Используя этот метод, мы увидели, что скорость выполнения у нас возросла. 
Вывод: использовать первоначальный метод было лучшим решением.
0.19445660000201315
0.2124706999748014
"""